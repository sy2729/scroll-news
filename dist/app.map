{"version":3,"sources":["app.js"],"names":["Bar","obj","id","data","speed","direction","el","document","querySelector","startValue","runingState","init","Array","Error","pageWidth","body","clientWidth","pageHeight","clientHeight","watchBrowserResize","El","createDocumentFragment","noteWord","note","forEach","i","index","length","classNames","appendChild","createElement","text","style","opacity","setAttribute","setTimeout","onload","allTextNodeArray","children","conditions","prototype","reduce","call","sum","currentNode","getClientRects","width","running","content","element","className","result","bg","backgroundColor","color","textContent","side","split","moveBar","value","replace","transform","watchAndDelete","window","requestAnimationFrame","sideToWatch","addEventListener"],"mappings":";;;AAoKA,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAnKA,QAAA,cAEMA,IAAAA,EAiKN,WAhKgBC,SAAAA,EAAAA,GAAK,EAAA,KAAA,GACRC,IAAAA,EAAiDD,EAAjDC,GAAIC,EAA6CF,EAA7CE,KAA6CF,EAAAA,EAAvCG,MAAAA,OAAQ,IAAA,EAAA,EADV,EACyCH,EAAAA,EAA5BI,UAAAA,OAAY,IAAA,EAAA,aADzB,EAERH,KAAAA,GAAKA,EACLI,KAAAA,GAAKC,SAASC,cAAcN,GAC5BC,KAAAA,KAAOA,EACPC,KAAAA,MAAQA,EACRC,KAAAA,UAAYA,EACZI,KAAAA,WAAa,EACbC,KAAAA,aAAc,EACdC,KAAAA,OAuJb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAlJW,MAAA,WAAA,IAAA,EAAA,KACA,GAAsB,YAAd,EAAA,KAAKR,OAAqB,KAAKA,gBAAgBS,MAChD,MAAA,IAAIC,MAAM,gDAIfC,KAAAA,UAAYP,SAASQ,KAAKC,YAC1BC,KAAAA,WAAaV,SAASQ,KAAKG,aAG3BC,KAAAA,qBAGDC,IAAAA,EAAKb,SAASc,yBAQdC,EANa,CACC,aAAA,QACH,UAAA,QACA,UAAA,OACG,aAAA,QAEQ,KAAKjB,WAC1BkB,KAAAA,KAAOD,EACPnB,KAAAA,KAAKqB,QAAQ,SAACC,EAAGC,GAEdH,IAAAA,EAEAA,EADa,UAAbD,EACkB,IAAVI,EAAeJ,EAAW,GAE1BI,IAAU,EAAKvB,KAAKwB,OAAS,EAAKL,EAAW,GAGrDM,IAAAA,EAAa,YACjBA,EAAaF,EAAQ,GAAM,EAAIE,EAAa,UAAYA,EAAa,UAIrER,EAAGS,YAAY,EAAKC,cAAcL,EAAEM,KAAM,IAAKH,EAAYL,EAAME,MAIhEnB,KAAAA,GAAG0B,MAAMC,QAAU,IAGnB3B,KAAAA,GAAG4B,aAAa,QAAS,YACzB5B,KAAAA,GAAGuB,YAAYT,GAEpBe,WAAW,WACP,EAAK7B,GAAG0B,MAAMC,QAAU,KACzB,GAGH1B,SAASQ,KAAKqB,OAAS,WAGfC,IAAAA,EAAmB,EAAK/B,GAAGgC,SAM3BC,EAAa,CACC,cANF3B,MAAM4B,UAAUC,OAAOC,KAAKL,EAAkB,SAACM,EAAKC,GACzDD,OAAAA,EAAMC,EAAYC,iBAAiB,GAAGC,OAC9C,GAI6B,EAAKxC,GAAGU,YACzB,WAAE,EAAKV,GAAGY,aACV,UAAA,EAAKZ,GAAGY,aAAe,EAAKD,WACzB,aAAA,EAAKH,WAEvB,EAAKL,WAAa8B,EAAW,EAAKlC,YAOjC0C,KAAAA,YAwEb,CAAA,IAAA,gBAtEkBC,MAAAA,SAAAA,EAASC,EAASC,EAAW3B,EAAMpB,GACzCgD,IAAAA,EAAS5C,SAASuB,cAAcmB,GAM7BE,OALPD,GAAYC,EAAOjB,aAAa,QAASgB,GACzC3B,GAAO4B,EAAOjB,aAAa,SAAUX,GACrCpB,EAAKiD,IAAyB,iBAAZjD,EAAKiD,KAAkBD,EAAOnB,MAAMqB,gBAAkBlD,EAAKiD,IAC7EjD,EAAKmD,OAA+B,iBAAfnD,EAAKmD,QAAqBH,EAAOnB,MAAMsB,MAAQnD,EAAKmD,OACzEH,EAAOI,YAAcP,EACdG,IA+Df,CAAA,IAAA,UA7Dc,MAAA,WAAA,IAAA,EAAA,KACFZ,EAAa,CACC,aAAA,wBACH,UAAA,wBACA,UAAA,yBACG,aAAA,yBAGd,IAACA,EAAW,KAAKlC,WAAoB,MAAA,IAAIQ,MAAM,sCAG/C2C,IAAAA,EAAO,KAAKnD,UAAUoD,MAAM,KAAK,IAGvB,SAAVC,IAEY,SAATF,GAAmB,EAAKT,QACvB,EAAKtC,YAAc,EAAKL,MACR,UAAToD,GAAoB,EAAKT,UAEhC,EAAKtC,YAAc,EAAKL,OAIxBuD,IAAAA,EAAQpB,EAAW,EAAKlC,WAAWuD,QAAQ,UAAW,EAAKnD,YAC/D,EAAKH,GAAG0B,MAAM6B,UAAYF,EAC1B,EAAKG,eAAeN,GACpBO,OAAOC,sBAAsBN,GAEjCA,GAGKI,KAAAA,mBA6Bb,CAAA,IAAA,iBA3BmBG,MAAAA,SAAAA,GACF1D,SAASC,cAAc,YAAmB,KAAKe,KAAO,MAC7CsB,iBAAiB,GAAGoB,IAGvB,KAAKnD,YACXL,KAAAA,YAAe,KAAKH,GAAGU,eAqBxC,CAAA,IAAA,qBAdyB,MAAA,WAAA,IAAA,EAAA,KACjB+C,OAAOG,iBAAiB,SAAU,WAC9B,EAAKpD,UAAYP,SAASQ,KAAKC,YAC/B,EAAKC,WAAaV,SAASQ,KAAKG,iBAW5C,CAAA,IAAA,OARU,MAAA,WACG6B,KAAAA,SAAU,IAOvB,CAAA,IAAA,QALW,MAAA,WACEA,KAAAA,SAAU,MAIvB,EAAA,GAAAgB,OAAO/D,IAAMA","file":"app.map","sourceRoot":"..","sourcesContent":["// import the style for bundling\nimport './app.scss'\n\nclass Bar {\n    constructor(obj) {\n        let {id, data, speed = 1, direction = 'left-right'} = obj;\n        this.id = id;\n        this.el = document.querySelector(id);\n        this.data = data;\n        this.speed = speed;\n        this.direction = direction;\n        this.startValue = 0;\n        this.runingState = true;\n        this.init()\n    };\n\n\n\n    init() {\n        if(!typeof this.data === 'object' && this.data instanceof Array) {\n            throw new Error('the first input - the data must be an array ');\n        }\n\n        // detect page width and height\n        this.pageWidth = document.body.clientWidth;\n        this.pageHeight = document.body.clientHeight;\n\n        // watch browser resize event;\n        this.watchBrowserResize();\n\n        // create the bar content\n        var El = document.createDocumentFragment();\n        // set the bar-id attribute for later slideout page eventlistener use\n        var conditions = {\n            'left-right': 'first',\n            'up-down': 'first',\n            'down-up': 'last',\n            'right-left': 'last'\n        };\n        var noteWord = conditions[this.direction];\n        this.note = noteWord\n        this.data.forEach((i, index)=> {\n            // add the bar-id to the element attribute\n            let note;\n            if (noteWord === 'first') {\n                note = (index === 0) ? noteWord : '';\n            }else {\n                note = (index === this.data.length - 1) ? noteWord : '';\n            }\n\n            var classNames = 'each-news'\n            classNames = index % 2 === 0 ? classNames + ' single' : classNames + ' double';\n\n            // this.el.style.transform = this\n            // create\n            El.appendChild(this.createElement(i.text, 'p', classNames, note, i))\n        })\n        \n        // hide the element initially;\n        this.el.style.opacity = '0';\n\n        // append the final result into the Node in the page;\n        this.el.setAttribute('class', 'flex bar');\n        this.el.appendChild(El);\n        // detect wehther the dynamically loaded component is fully rendered on the page\n        setTimeout(()=> {\n            this.el.style.opacity = '1';\n        }, 0)\n\n        // set the start position of the bar\n        document.body.onload = ()=> {\n\n            // get the length of the whole bar\n            let allTextNodeArray = this.el.children;\n            let allLength = Array.prototype.reduce.call(allTextNodeArray, (sum, currentNode)=> {\n                return sum + currentNode.getClientRects()[0].width\n            }, 0)\n\n            // set startValue depends on the direction\n            var conditions = {\n                'left-right': - allLength + this.el.clientWidth,\n                'up-down': - this.el.clientHeight,\n                'down-up': this.el.clientHeight + this.pageHeight,\n                'right-left': this.pageWidth,\n            };\n            this.startValue = conditions[this.direction];\n            \n            // condition for the first condition - 'left-right'\n            // this.startValue = this.el.clientWidth < this.pageWidth ? this.el.clientWidth : this.el.pageWidth\n        }\n\n        // start running the bar\n        this.running();\n    };\n    createElement(content, element, className, note, data){\n        let result = document.createElement(element);\n        className ? result.setAttribute('class', className) : undefined;\n        note ? result.setAttribute('bar-id', note) : undefined;\n        data.bg && typeof data.bg === 'string' ? result.style.backgroundColor = data.bg : undefined;\n        data.color && typeof data.color === 'string' ? result.style.color = data.color : undefined;\n        result.textContent = content;\n        return result;\n    };\n    running() {\n        var conditions = {\n            'left-right': 'translateX({value}px)',\n            'up-down': 'translateY({value}px)',\n            'down-up': 'translateY(-{value}px)',\n            'right-left': 'translateX({value}px)'\n        };\n        // return false if the direction declaration is not correct\n        if (!conditions[this.direction]) { throw new Error('Declare the right direction please')};\n\n        // get the side of calculation for watch and delete function to use\n        var side = this.direction.split('-')[0]\n\n        // move the bar based on direction\n        let moveBar = ()=> {\n            // console.log(this.startValue)\n            if(side === 'left' && this.running) {\n                this.startValue += this.speed\n            } else if (side === 'right' && this.running) {\n                // @TODO - Not working, should fix - (probably because the bar is the whole line while content is not sufficient)\n                this.startValue -= this.speed\n                // console.log(this.startValue)\n            }\n            \n            let value = conditions[this.direction].replace('{value}', this.startValue)\n            this.el.style.transform = value;\n            this.watchAndDelete(side);\n            window.requestAnimationFrame(moveBar)\n        }\n        moveBar()\n\n        // start watching the bar and detection\n        this.watchAndDelete()\n    };\n    watchAndDelete(sideToWatch){\n        let el = document.querySelector('[bar-id=' + \"'\" + this.note + \"'\" +  ']')\n        var distance = el.getClientRects()[0][sideToWatch];\n        // console.log(el.getClientRects()[0].right)\n        // console.log(this.el.clientWidth)\n        if(distance >= this.pageWidth) {\n            this.startValue = - this.el.clientWidth;\n            // this.el.style.transform = `translateX(-${this.pageWidth + this.el.clientWidth}px)`\n            // this.el.parentNode.removeChild(this.el);\n        }\n        // console.log(this.pageWidth + this.el.clientWidth)\n        \n    };\n    watchBrowserResize() {\n        window.addEventListener('resize', ()=> {\n            this.pageWidth = document.body.clientWidth;\n            this.pageHeight = document.body.clientHeight\n        })\n    };\n    stop(){\n        this.running = false;\n    }\n    start(){\n        this.running = true;\n    }\n}\n\nwindow.Bar = Bar"]}